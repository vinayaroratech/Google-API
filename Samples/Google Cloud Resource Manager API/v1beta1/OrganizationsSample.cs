// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     C# generater version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unoffical sample for the Cloudresourcemanager v1beta1 API for C#. 
// This sample is designed to be used with the Google .Net client library. (https://github.com/google/google-api-dotnet-client)
// 
// API Description: The Google Cloud Resource Manager API provides methods for creating, reading, and updating project metadata.
// API Documentation Link https://cloud.google.com/resource-manager
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/Cloudresourcemanager/v1beta1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// This sample code uses the Google .Net client library (https://github.com/google/google-api-dotnet-client)
//
// NuGet package:
//
// Location: https://www.nuget.org/packages/Google.Apis.Cloudresourcemanager.v1beta1/ 
// Install Command: PM>  Install-Package Google.Apis.Cloudresourcemanager.v1beta1
//
//------------------------------------------------------------------------------  
using Google.Apis.Cloudresourcemanager.v1beta1;
using Google.Apis.Cloudresourcemanager.v1beta1.Data;
using System;

namespace GoogleSamplecSharpSample.Cloudresourcemanagerv1beta1.Methods
{
  
    public static class OrganizationsSample
    {


        /// <summary>
        /// Gets the access control policy for an Organization resource. May be emptyif no such policy or resource exists. The `resource` field should be theorganization's resource name, e.g. "organizations/123". 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/getIamPolicy
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="resource">REQUIRED: The resource for which the policy is being requested.See the operation documentation for the appropriate value for this field.</param>
        /// <param name="body">A valid Cloudresourcemanager v1beta1 body.</param>
        /// <returns>PolicyResponse</returns>
        public static Policy GetIamPolicy(CloudresourcemanagerService service, string resource, GetIamPolicyRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (resource == null)
                    throw new ArgumentNullException(resource);

                // Make the request.
                return service.Organizations.GetIamPolicy(body, resource).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.GetIamPolicy failed.", ex);
            }
        }
        public class OrganizationsGetOptionalParms
        {
            /// The id of the Organization resource to fetch.This field is deprecated and will be removed in v1. Use name instead.
            public string OrganizationId { get; set; }  
        
        }
 
        /// <summary>
        /// Fetches an Organization resource identified by the specified resource name. 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/get
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="name">The resource name of the Organization to fetch, e.g. "organizations/1234".</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>OrganizationResponse</returns>
        public static Organization Get(CloudresourcemanagerService service, string name, OrganizationsGetOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Building the initial request.
                var request = service.Organizations.Get(name);

                // Applying optional parameters to the request.                
                request = (OrganizationsResource.GetRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.Get failed.", ex);
            }
        }

        /// <summary>
        /// Updates an Organization resource identified by the specified resource name. 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/update
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="name">Output Only. The resource name of the organization. This is theorganization's relative path in the API. Its format is"organizations/[organization_id]". For example, "organizations/1234".</param>
        /// <param name="body">A valid Cloudresourcemanager v1beta1 body.</param>
        /// <returns>OrganizationResponse</returns>
        public static Organization Update(CloudresourcemanagerService service, string name, Organization body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Make the request.
                return service.Organizations.Update(body, name).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.Update failed.", ex);
            }
        }

        /// <summary>
        /// Returns permissions that a caller has on the specified Organization.The `resource` field should be the organization's resource name,e.g. "organizations/123". 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/testIamPermissions
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="resource">REQUIRED: The resource for which the policy detail is being requested.See the operation documentation for the appropriate value for this field.</param>
        /// <param name="body">A valid Cloudresourcemanager v1beta1 body.</param>
        /// <returns>TestIamPermissionsResponseResponse</returns>
        public static TestIamPermissionsResponse TestIamPermissions(CloudresourcemanagerService service, string resource, TestIamPermissionsRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (resource == null)
                    throw new ArgumentNullException(resource);

                // Make the request.
                return service.Organizations.TestIamPermissions(body, resource).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.TestIamPermissions failed.", ex);
            }
        }
        public class OrganizationsListOptionalParms
        {
            /// A pagination token returned from a previous call to `ListOrganizations`that indicates from where listing should continue.This field is optional.
            public string PageToken { get; set; }  
            /// The maximum number of Organizations to return in the response.This field is optional.
            public int? PageSize { get; set; }  
            /// An optional query string used to filter the Organizations to return inthe response. Filter rules are case-insensitive.Organizations may be filtered by `owner.directoryCustomerId` or by`domain`, where the domain is a Google for Work domain, for example:|Filter|Description||------|-----------||owner.directorycustomerid:123456789|Organizations with `owner.directory_customer_id` equal to `123456789`.||domain:google.com|Organizations corresponding to the domain `google.com`.|This field is optional.
            public string Filter { get; set; }  
        
        }
 
        /// <summary>
        /// Lists Organization resources that are visible to the user and satisfythe specified filter. This method returns Organizations in an unspecifiedorder. New Organizations do not necessarily appear at the end of the list. 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/list
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>ListOrganizationsResponseResponse</returns>
        public static ListOrganizationsResponse List(CloudresourcemanagerService service, OrganizationsListOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");

                // Building the initial request.
                var request = service.Organizations.List();

                // Applying optional parameters to the request.                
                request = (OrganizationsResource.ListRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.List failed.", ex);
            }
        }

        /// <summary>
        /// Sets the access control policy on an Organization resource. Replaces anyexisting policy. The `resource` field should be the organization's resourcename, e.g. "organizations/123". 
        /// Documentation https://developers.google.com/cloudresourcemanager/v1beta1/reference/organizations/setIamPolicy
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudresourcemanager service.</param>  
        /// <param name="resource">REQUIRED: The resource for which the policy is being specified.See the operation documentation for the appropriate value for this field.</param>
        /// <param name="body">A valid Cloudresourcemanager v1beta1 body.</param>
        /// <returns>PolicyResponse</returns>
        public static Policy SetIamPolicy(CloudresourcemanagerService service, string resource, SetIamPolicyRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (resource == null)
                    throw new ArgumentNullException(resource);

                // Make the request.
                return service.Organizations.SetIamPolicy(body, resource).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Organizations.SetIamPolicy failed.", ex);
            }
        }
        
        }

        public static class SampleHelpers
        {

        /// <summary>
        /// Using reflection to apply optional parameters to the request.  
        /// 
        /// If the optonal parameters are null then we will just return the request as is.
        /// </summary>
        /// <param name="request">The request. </param>
        /// <param name="optional">The optional parameters. </param>
        /// <returns></returns>
        public static object ApplyOptionalParms(object request, object optional)
        {
            if (optional == null)
                return request;

            System.Reflection.PropertyInfo[] optionalProperties = (optional.GetType()).GetProperties();

            foreach (System.Reflection.PropertyInfo property in optionalProperties)
            {
                // Copy value from optional parms to the request.  They should have the same names and datatypes.
                System.Reflection.PropertyInfo piShared = (request.GetType()).GetProperty(property.Name);
				if (property.GetValue(optional, null) != null) // TODO Test that we do not add values for items that are null
					piShared.SetValue(request, property.GetValue(optional, null), null);
            }

            return request;
        }
    }
}