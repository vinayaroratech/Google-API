// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     C# generater version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unoffical sample for the Cloudmachinelearningengine v1 API for C#. 
// This sample is designed to be used with the Google .Net client library. (https://github.com/google/google-api-dotnet-client)
// 
// API Description: An API to enable creating and using machine learning models.
// API Documentation Link https://cloud.google.com/ml/
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/Cloudmachinelearningengine/v1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// This sample code uses the Google .Net client library (https://github.com/google/google-api-dotnet-client)
//
// NuGet package:
//
// Location: https://www.nuget.org/packages/Google.Apis.Cloudmachinelearningengine.v1/ 
// Install Command: PM>  Install-Package Google.Apis.Cloudmachinelearningengine.v1
//
//------------------------------------------------------------------------------  
using Google.Apis.Cloudmachinelearningengine.v1;
using Google.Apis.Cloudmachinelearningengine.v1.Data;
using System;

namespace GoogleSamplecSharpSample.Cloudmachinelearningenginev1.Methods
{
  
    public static class VersionsSample
    {


        /// <summary>
        /// Gets information about a model version.Models can have multiple versions. You can call[projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list)to get the same information that this method returns for all of theversions of a model. 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/get
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="name">Required. The name of the version.</param>
        /// <returns>GoogleCloudMlV1__VersionResponse</returns>
        public static GoogleCloudMlV1__Version Get(CloudmachinelearningengineService service, string name)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Make the request.
                return service.Versions.Get(name).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.Get failed.", ex);
            }
        }
        public class VersionsPatchOptionalParms
        {
            /// Required. Specifies the path, relative to `Version`, of the field toupdate. Must be present and non-empty.For example, to change the description of a version to "foo", the`update_mask` parameter would be specified as `description`, and the`PATCH` request body would specify the new value, as follows:    {      "description": "foo"    }In this example, the version is blindly overwritten since no etag is given.To adopt etag mechanism, include `etag` field in the mask, and include the`etag` value in your version resource.Currently the only supported update masks are `description`, `labels`, and`etag`.
            public string UpdateMask { get; set; }  
        
        }
 
        /// <summary>
        /// Updates the specified Version resource.Currently the only supported field to update is `description`. 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/patch
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="name">Required. The name of the model.</param>
        /// <param name="body">A valid Cloudmachinelearningengine v1 body.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>GoogleLongrunning__OperationResponse</returns>
        public static GoogleLongrunning__Operation Patch(CloudmachinelearningengineService service, string name, GoogleCloudMlV1__Version body, VersionsPatchOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Building the initial request.
                var request = service.Versions.Patch(body, name);

                // Applying optional parameters to the request.                
                request = (VersionsResource.PatchRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.Patch failed.", ex);
            }
        }

        /// <summary>
        /// Designates a version to be the default for the model.The default version is used for prediction requests made against the modelthat don't specify a version.The first version to be created for a model is automatically set as thedefault. You must make any subsequent changes to the default versionsetting manually using this method. 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/setDefault
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="name">Required. The name of the version to make the default for the model. Youcan get the names of all the versions of a model by calling[projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).</param>
        /// <param name="body">A valid Cloudmachinelearningengine v1 body.</param>
        /// <returns>GoogleCloudMlV1__VersionResponse</returns>
        public static GoogleCloudMlV1__Version SetDefault(CloudmachinelearningengineService service, string name, GoogleCloudMlV1__SetDefaultVersionRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Make the request.
                return service.Versions.SetDefault(body, name).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.SetDefault failed.", ex);
            }
        }

        /// <summary>
        /// Deletes a model version.Each model can have multiple versions deployed and in use at any giventime. Use this method to remove a single version.Note: You cannot delete the version that is set as the default versionof the model unless it is the only remaining version. 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/delete
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="name">Required. The name of the version. You can get the names of all theversions of a model by calling[projects.models.versions.list](/ml-engine/reference/rest/v1/projects.models.versions/list).</param>
        /// <returns>GoogleLongrunning__OperationResponse</returns>
        public static GoogleLongrunning__Operation Delete(CloudmachinelearningengineService service, string name)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (name == null)
                    throw new ArgumentNullException(name);

                // Make the request.
                return service.Versions.Delete(name).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.Delete failed.", ex);
            }
        }
        public class VersionsListOptionalParms
        {
            /// Optional. A page token to request the next page of results.You get the token from the `next_page_token` field of the response fromthe previous call.
            public string PageToken { get; set; }  
            /// Optional. The number of versions to retrieve per "page" of results. Ifthere are more remaining results than this number, the response messagewill contain a valid value in the `next_page_token` field.The default value is 20, and the maximum page size is 100.
            public int? PageSize { get; set; }  
        
        }
 
        /// <summary>
        /// Gets basic information about all the versions of a model.If you expect that a model has a lot of versions, or if you need to handleonly a limited number of results at a time, you can request that the listbe retrieved in batches (called pages): 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/list
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="parent">Required. The name of the model for which to list the version.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>GoogleCloudMlV1__ListVersionsResponseResponse</returns>
        public static GoogleCloudMlV1__ListVersionsResponse List(CloudmachinelearningengineService service, string parent, VersionsListOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (parent == null)
                    throw new ArgumentNullException(parent);

                // Building the initial request.
                var request = service.Versions.List(parent);

                // Applying optional parameters to the request.                
                request = (VersionsResource.ListRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.List failed.", ex);
            }
        }

        /// <summary>
        /// Creates a new version of a model from a trained TensorFlow model.If the version created in the cloud by this call is the first deployedversion of the specified model, it will be made the default version of themodel. When you add a version to a model that already has one or moreversions, the default version does not automatically change. If you want anew version to be the default, you must call[projects.models.versions.setDefault](/ml-engine/reference/rest/v1/projects.models.versions/setDefault). 
        /// Documentation https://developers.google.com/cloudmachinelearningengine/v1/reference/versions/create
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Cloudmachinelearningengine service.</param>  
        /// <param name="parent">Required. The name of the model.</param>
        /// <param name="body">A valid Cloudmachinelearningengine v1 body.</param>
        /// <returns>GoogleLongrunning__OperationResponse</returns>
        public static GoogleLongrunning__Operation Create(CloudmachinelearningengineService service, string parent, GoogleCloudMlV1__Version body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (parent == null)
                    throw new ArgumentNullException(parent);

                // Make the request.
                return service.Versions.Create(body, parent).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Versions.Create failed.", ex);
            }
        }
        
        }

        public static class SampleHelpers
        {

        /// <summary>
        /// Using reflection to apply optional parameters to the request.  
        /// 
        /// If the optonal parameters are null then we will just return the request as is.
        /// </summary>
        /// <param name="request">The request. </param>
        /// <param name="optional">The optional parameters. </param>
        /// <returns></returns>
        public static object ApplyOptionalParms(object request, object optional)
        {
            if (optional == null)
                return request;

            System.Reflection.PropertyInfo[] optionalProperties = (optional.GetType()).GetProperties();

            foreach (System.Reflection.PropertyInfo property in optionalProperties)
            {
                // Copy value from optional parms to the request.  They should have the same names and datatypes.
                System.Reflection.PropertyInfo piShared = (request.GetType()).GetProperty(property.Name);
				if (property.GetValue(optional, null) != null) // TODO Test that we do not add values for items that are null
					piShared.SetValue(request, property.GetValue(optional, null), null);
            }

            return request;
        }
    }
}