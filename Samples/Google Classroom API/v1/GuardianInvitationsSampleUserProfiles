// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     C# generater version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unoffical sample for the Classroom v1 API for C#. 
// This sample is designed to be used with the Google .Net client library. (https://github.com/google/google-api-dotnet-client)
// 
// API Description: Manages classes, rosters, and invitations in Google Classroom.
// API Documentation Link https://developers.google.com/classroom/
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/Classroom/v1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// This sample code uses the Google .Net client library (https://github.com/google/google-api-dotnet-client)
//
// NuGet package:
//
// Location: https://www.nuget.org/packages/Google.Apis.Classroom.v1/ 
// Install Command: PM>  Install-Package Google.Apis.Classroom.v1
//
//------------------------------------------------------------------------------  
using Google.Apis.Classroom.v1;
using Google.Apis.Classroom.v1.Data;
using System;

namespace GoogleSamplecSharpSample.Classroomv1.Methods
{
  
    public static class GuardianInvitationsSample
    {

        public class GuardianInvitationsPatchOptionalParms
        {
            /// Mask that identifies which fields on the course to update.This field is required to do an update. The update will fail if invalidfields are specified. The following fields are valid:* `state`When set in a query parameter, this field should be specified as`updateMask=<field1>,<field2>,...`
            public string UpdateMask { get; set; }  
        
        }
 
        /// <summary>
        /// Modifies a guardian invitation.Currently, the only valid modification is to change the `state` from`PENDING` to `COMPLETE`. This has the effect of withdrawing the invitation.This method returns the following error codes:* `PERMISSION_DENIED` if the current user does not have permission to  manage guardians, if guardians are not enabled for the domain in question  or for other access errors.* `FAILED_PRECONDITION` if the guardian link is not in the `PENDING` state.* `INVALID_ARGUMENT` if the format of the student ID provided  cannot be recognized (it is not an email address, nor a `user_id` from  this API), or if the passed `GuardianInvitation` has a `state` other than  `COMPLETE`, or if it modifies fields other than `state`.* `NOT_FOUND` if the student ID provided is a valid student ID, but  Classroom has no record of that student, or if the `id` field does not  refer to a guardian invitation known to Classroom. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardianInvitations/patch
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">The ID of the student whose guardian invitation is to be modified.</param>
        /// <param name="invitationId">The `id` field of the `GuardianInvitation` to be modified.</param>
        /// <param name="body">A valid Classroom v1 body.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>GuardianInvitationResponse</returns>
        public static GuardianInvitation Patch(ClassroomService service, string studentId, string invitationId, GuardianInvitation body, GuardianInvitationsPatchOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);
                if (invitationId == null)
                    throw new ArgumentNullException(invitationId);

                // Building the initial request.
                var request = service.GuardianInvitations.Patch(body, studentId, invitationId);

                // Applying optional parameters to the request.                
                request = (GuardianInvitationsResource.PatchRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request GuardianInvitations.Patch failed.", ex);
            }
        }

        /// <summary>
        /// Returns a specific guardian invitation.This method returns the following error codes:* `PERMISSION_DENIED` if the requesting user is not permitted to view  guardian invitations for the student identified by the `student_id`, if  guardians are not enabled for the domain in question, or for other  access errors.* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot  be recognized (it is not an email address, nor a `student_id` from the  API, nor the literal string `me`).* `NOT_FOUND` if Classroom cannot find any record of the given student or  `invitation_id`. May also be returned if the student exists, but the  requesting user does not have access to see that student. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardianInvitations/get
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">The ID of the student whose guardian invitation is being requested.</param>
        /// <param name="invitationId">The `id` field of the `GuardianInvitation` being requested.</param>
        /// <returns>GuardianInvitationResponse</returns>
        public static GuardianInvitation Get(ClassroomService service, string studentId, string invitationId)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);
                if (invitationId == null)
                    throw new ArgumentNullException(invitationId);

                // Make the request.
                return service.GuardianInvitations.Get(studentId, invitationId).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request GuardianInvitations.Get failed.", ex);
            }
        }
        public class GuardianInvitationsListOptionalParms
        {
            /// nextPageTokenvalue returned from a previouslist call,indicating that the subsequent page of results should be returned.The list requestmust be otherwise identical to the one that resulted in this token.
            public string PageToken { get; set; }  
            /// Maximum number of items to return. Zero or unspecified indicates that theserver may assign a maximum.The server may return fewer than the specified number of results.
            public int? PageSize { get; set; }  
            /// If specified, only results with the specified `state` values will bereturned. Otherwise, results with a `state` of `PENDING` will be returned.
            public string States { get; set; }  
            /// If specified, only results with the specified `invited_email_address`will be returned.
            public string InvitedEmailAddress { get; set; }  
        
        }
 
        /// <summary>
        /// Returns a list of guardian invitations that the requesting user ispermitted to view, filtered by the parameters provided.This method returns the following error codes:* `PERMISSION_DENIED` if a `student_id` is specified, and the requesting  user is not permitted to view guardian invitations for that student, if  `"-"` is specified as the `student_id` and the user is not a domain  administrator, if guardians are not enabled for the domain in question,  or for other access errors.* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot  be recognized (it is not an email address, nor a `student_id` from the  API, nor the literal string `me`). May also be returned if an invalid  `page_token` or `state` is provided.* `NOT_FOUND` if a `student_id` is specified, and its format can be  recognized, but Classroom has no record of that student. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardianInvitations/list
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">The ID of the student whose guardian invitations are to be returned.The identifier can be one of the following:* the numeric identifier for the user* the email address of the user* the string literal `"me"`, indicating the requesting user* the string literal `"-"`, indicating that results should be returned for  all students that the requesting user is permitted to view guardian  invitations.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>ListGuardianInvitationsResponseResponse</returns>
        public static ListGuardianInvitationsResponse List(ClassroomService service, string studentId, GuardianInvitationsListOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);

                // Building the initial request.
                var request = service.GuardianInvitations.List(studentId);

                // Applying optional parameters to the request.                
                request = (GuardianInvitationsResource.ListRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request GuardianInvitations.List failed.", ex);
            }
        }

        /// <summary>
        /// Creates a guardian invitation, and sends an email to the guardian askingthem to confirm that they are the student's guardian.Once the guardian accepts the invitation, their `state` will change to`COMPLETED` and they will start receiving guardian notifications. A`Guardian` resource will also be created to represent the active guardian.The request object must have the `student_id` and`invited_email_address` fields set. Failing to set these fields, orsetting any other fields in the request, will result in an error.This method returns the following error codes:* `PERMISSION_DENIED` if the current user does not have permission to  manage guardians, if the guardian in question has already rejected  too many requests for that student, if guardians are not enabled for the  domain in question, or for other access errors.* `RESOURCE_EXHAUSTED` if the student or guardian has exceeded the guardian  link limit.* `INVALID_ARGUMENT` if the guardian email address is not valid (for  example, if it is too long), or if the format of the student ID provided  cannot be recognized (it is not an email address, nor a `user_id` from  this API). This error will also be returned if read-only fields are set,  or if the `state` field is set to to a value other than `PENDING`.* `NOT_FOUND` if the student ID provided is a valid student ID, but  Classroom has no record of that student.* `ALREADY_EXISTS` if there is already a pending guardian invitation for  the student and `invited_email_address` provided, or if the provided  `invited_email_address` matches the Google account of an existing  `Guardian` for this user. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardianInvitations/create
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">ID of the student (in standard format)</param>
        /// <param name="body">A valid Classroom v1 body.</param>
        /// <returns>GuardianInvitationResponse</returns>
        public static GuardianInvitation Create(ClassroomService service, string studentId, GuardianInvitation body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);

                // Make the request.
                return service.GuardianInvitations.Create(body, studentId).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request GuardianInvitations.Create failed.", ex);
            }
        }
        
        }

        public static class SampleHelpers
        {

        /// <summary>
        /// Using reflection to apply optional parameters to the request.  
        /// 
        /// If the optonal parameters are null then we will just return the request as is.
        /// </summary>
        /// <param name="request">The request. </param>
        /// <param name="optional">The optional parameters. </param>
        /// <returns></returns>
        public static object ApplyOptionalParms(object request, object optional)
        {
            if (optional == null)
                return request;

            System.Reflection.PropertyInfo[] optionalProperties = (optional.GetType()).GetProperties();

            foreach (System.Reflection.PropertyInfo property in optionalProperties)
            {
                // Copy value from optional parms to the request.  They should have the same names and datatypes.
                System.Reflection.PropertyInfo piShared = (request.GetType()).GetProperty(property.Name);
				if (property.GetValue(optional, null) != null) // TODO Test that we do not add values for items that are null
					piShared.SetValue(request, property.GetValue(optional, null), null);
            }

            return request;
        }
    }
}