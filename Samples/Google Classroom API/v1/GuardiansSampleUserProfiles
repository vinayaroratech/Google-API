// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     C# generater version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unoffical sample for the Classroom v1 API for C#. 
// This sample is designed to be used with the Google .Net client library. (https://github.com/google/google-api-dotnet-client)
// 
// API Description: Manages classes, rosters, and invitations in Google Classroom.
// API Documentation Link https://developers.google.com/classroom/
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/Classroom/v1/rest
//
//------------------------------------------------------------------------------
// Installation
//
// This sample code uses the Google .Net client library (https://github.com/google/google-api-dotnet-client)
//
// NuGet package:
//
// Location: https://www.nuget.org/packages/Google.Apis.Classroom.v1/ 
// Install Command: PM>  Install-Package Google.Apis.Classroom.v1
//
//------------------------------------------------------------------------------  
using Google.Apis.Classroom.v1;
using Google.Apis.Classroom.v1.Data;
using System;

namespace GoogleSamplecSharpSample.Classroomv1.Methods
{
  
    public static class GuardiansSample
    {


        /// <summary>
        /// Deletes a guardian.The guardian will no longer receive guardian notifications and the guardianwill no longer be accessible via the API.This method returns the following error codes:* `PERMISSION_DENIED` if no user that matches the provided `student_id`  is visible to the requesting user, if the requesting user is not  permitted to manage guardians for the student identified by the  `student_id`, if guardians are not enabled for the domain in question,  or for other access errors.* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot  be recognized (it is not an email address, nor a `student_id` from the  API).* `NOT_FOUND` if the requesting user is permitted to modify guardians for  the requested `student_id`, but no `Guardian` record exists for that  student with the provided `guardian_id`. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardians/delete
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">The student whose guardian is to be deleted. One of the following:* the numeric identifier for the user* the email address of the user* the string literal `"me"`, indicating the requesting user</param>
        /// <param name="guardianId">The `id` field from a `Guardian`.</param>
        /// <returns>EmptyResponse</returns>
        public static Empty Delete(ClassroomService service, string studentId, string guardianId)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);
                if (guardianId == null)
                    throw new ArgumentNullException(guardianId);

                // Make the request.
                return service.Guardians.Delete(studentId, guardianId).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Guardians.Delete failed.", ex);
            }
        }

        /// <summary>
        /// Returns a specific guardian.This method returns the following error codes:* `PERMISSION_DENIED` if no user that matches the provided `student_id`  is visible to the requesting user, if the requesting user is not  permitted to view guardian information for the student identified by the  `student_id`, if guardians are not enabled for the domain in question,  or for other access errors.* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot  be recognized (it is not an email address, nor a `student_id` from the  API, nor the literal string `me`).* `NOT_FOUND` if the requesting user is permitted to view guardians for  the requested `student_id`, but no `Guardian` record exists for that  student that matches the provided `guardian_id`. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardians/get
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">The student whose guardian is being requested. One of the following:* the numeric identifier for the user* the email address of the user* the string literal `"me"`, indicating the requesting user</param>
        /// <param name="guardianId">The `id` field from a `Guardian`.</param>
        /// <returns>GuardianResponse</returns>
        public static Guardian Get(ClassroomService service, string studentId, string guardianId)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);
                if (guardianId == null)
                    throw new ArgumentNullException(guardianId);

                // Make the request.
                return service.Guardians.Get(studentId, guardianId).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Guardians.Get failed.", ex);
            }
        }
        public class GuardiansListOptionalParms
        {
            /// nextPageTokenvalue returned from a previouslist call,indicating that the subsequent page of results should be returned.The list requestmust be otherwise identical to the one that resulted in this token.
            public string PageToken { get; set; }  
            /// Maximum number of items to return. Zero or unspecified indicates that theserver may assign a maximum.The server may return fewer than the specified number of results.
            public int? PageSize { get; set; }  
            /// Filter results by the email address that the original invitation was sentto, resulting in this guardian link.This filter can only be used by domain administrators.
            public string InvitedEmailAddress { get; set; }  
        
        }
 
        /// <summary>
        /// Returns a list of guardians that the requesting user is permitted toview, restricted to those that match the request.To list guardians for any student that the requesting user may viewguardians for, use the literal character `-` for the student ID.This method returns the following error codes:* `PERMISSION_DENIED` if a `student_id` is specified, and the requesting  user is not permitted to view guardian information for that student, if  `"-"` is specified as the `student_id` and the user is not a domain  administrator, if guardians are not enabled for the domain in question,  if the `invited_email_address` filter is set by a user who is not a  domain administrator, or for other access errors.* `INVALID_ARGUMENT` if a `student_id` is specified, but its format cannot  be recognized (it is not an email address, nor a `student_id` from the  API, nor the literal string `me`). May also be returned if an invalid  `page_token` is provided.* `NOT_FOUND` if a `student_id` is specified, and its format can be  recognized, but Classroom has no record of that student. 
        /// Documentation https://developers.google.com/classroom/v1/reference/guardians/list
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Classroom service.</param>  
        /// <param name="studentId">Filter results by the student who the guardian is linked to.The identifier can be one of the following:* the numeric identifier for the user* the email address of the user* the string literal `"me"`, indicating the requesting user* the string literal `"-"`, indicating that results should be returned for  all students that the requesting user has access to view.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>ListGuardiansResponseResponse</returns>
        public static ListGuardiansResponse List(ClassroomService service, string studentId, GuardiansListOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (studentId == null)
                    throw new ArgumentNullException(studentId);

                // Building the initial request.
                var request = service.Guardians.List(studentId);

                // Applying optional parameters to the request.                
                request = (GuardiansResource.ListRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request Guardians.List failed.", ex);
            }
        }
        
        }

        public static class SampleHelpers
        {

        /// <summary>
        /// Using reflection to apply optional parameters to the request.  
        /// 
        /// If the optonal parameters are null then we will just return the request as is.
        /// </summary>
        /// <param name="request">The request. </param>
        /// <param name="optional">The optional parameters. </param>
        /// <returns></returns>
        public static object ApplyOptionalParms(object request, object optional)
        {
            if (optional == null)
                return request;

            System.Reflection.PropertyInfo[] optionalProperties = (optional.GetType()).GetProperties();

            foreach (System.Reflection.PropertyInfo property in optionalProperties)
            {
                // Copy value from optional parms to the request.  They should have the same names and datatypes.
                System.Reflection.PropertyInfo piShared = (request.GetType()).GetProperty(property.Name);
				if (property.GetValue(optional, null) != null) // TODO Test that we do not add values for items that are null
					piShared.SetValue(request, property.GetValue(optional, null), null);
            }

            return request;
        }
    }
}