// Copyright 2017 DAIMTO ([Linda Lawton](https://twitter.com/LindaLawtonDK)) :  [www.daimto.com](http://www.daimto.com/)
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by DAIMTO-Google-apis-Sample-generator 1.0.0
//     Template File Name:  methodTemplate.tt
//     Build date: 2017-10-08
//     C# generater version: 1.0.0
//     
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------  
// About 
// 
// Unoffical sample for the Replicapool v1beta2 API for C#. 
// This sample is designed to be used with the Google .Net client library. (https://github.com/google/google-api-dotnet-client)
// 
// API Description: [Deprecated. Please use Instance Group Manager in Compute API] Provides groups of homogenous Compute Engine instances.
// API Documentation Link https://developers.google.com/compute/docs/instance-groups/manager/v1beta2
//
// Discovery Doc  https://www.googleapis.com/discovery/v1/apis/Replicapool/v1beta2/rest
//
//------------------------------------------------------------------------------
// Installation
//
// This sample code uses the Google .Net client library (https://github.com/google/google-api-dotnet-client)
//
// NuGet package:
//
// Location: https://www.nuget.org/packages/Google.Apis.Replicapool.v1beta2/ 
// Install Command: PM>  Install-Package Google.Apis.Replicapool.v1beta2
//
//------------------------------------------------------------------------------  
using Google.Apis.Replicapool.v1beta2;
using Google.Apis.Replicapool.v1beta2.Data;
using System;

namespace GoogleSamplecSharpSample.Replicapoolv1beta2.Methods
{
  
    public static class InstanceGroupManagersSample
    {


        /// <summary>
        /// Removes the specified instances from the managed instance group, and from any target pools of which they were members, without deleting the instances. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/abandonInstances
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation AbandonInstances(ReplicapoolService service, string project, string zone, string instanceGroupManager, InstanceGroupManagersAbandonInstancesRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.AbandonInstances(body, project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.AbandonInstances failed.", ex);
            }
        }

        /// <summary>
        /// Deletes the instance group manager and all instances contained within. If you'd like to delete the manager without deleting the instances, you must first abandon the instances to remove them from the group. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/delete
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">Name of the Instance Group Manager resource to delete.</param>
        /// <returns>OperationResponse</returns>
        public static Operation Delete(ReplicapoolService service, string project, string zone, string instanceGroupManager)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.Delete(project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.Delete failed.", ex);
            }
        }

        /// <summary>
        /// Deletes the specified instances. The instances are deleted, then removed from the instance group and any target pools of which they were a member. The targetSize of the instance group manager is reduced by the number of instances deleted. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/deleteInstances
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation DeleteInstances(ReplicapoolService service, string project, string zone, string instanceGroupManager, InstanceGroupManagersDeleteInstancesRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.DeleteInstances(body, project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.DeleteInstances failed.", ex);
            }
        }

        /// <summary>
        /// Returns the specified Instance Group Manager resource. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/get
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">Name of the instance resource to return.</param>
        /// <returns>InstanceGroupManagerResponse</returns>
        public static InstanceGroupManager Get(ReplicapoolService service, string project, string zone, string instanceGroupManager)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.Get(project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.Get failed.", ex);
            }
        }

        /// <summary>
        /// Creates an instance group manager, as well as the instance group and the specified number of instances. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/insert
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="size">Number of instances that should exist.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation Insert(ReplicapoolService service, string project, string zone, int? size, InstanceGroupManager body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (size == null)
                    throw new ArgumentNullException(size);

                // Make the request.
                return service.InstanceGroupManagers.Insert(body, project, zone, size).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.Insert failed.", ex);
            }
        }
        public class InstanceGroupManagersListOptionalParms
        {
            /// Optional. Filter expression for filtering listed resources.
            public string Filter { get; set; }  
            /// Optional. Maximum count of results to be returned. Maximum value is 500 and default value is 500.
            public int? MaxResults { get; set; }  
            /// Optional. Tag returned by a previous list request truncated by maxResults. Used to continue a previous list request.
            public string PageToken { get; set; }  
        
        }
 
        /// <summary>
        /// Retrieves the list of Instance Group Manager resources contained within the specified zone. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/list
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="optional">Optional paramaters.</param>
        /// <returns>InstanceGroupManagerListResponse</returns>
        public static InstanceGroupManagerList List(ReplicapoolService service, string project, string zone, InstanceGroupManagersListOptionalParms optional = null)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);

                // Building the initial request.
                var request = service.InstanceGroupManagers.List(project, zone);

                // Applying optional parameters to the request.                
                request = (InstanceGroupManagersResource.ListRequest)SampleHelpers.ApplyOptionalParms(request, optional);

                // Requesting data.
                return request.Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.List failed.", ex);
            }
        }

        /// <summary>
        /// Recreates the specified instances. The instances are deleted, then recreated using the instance group manager's current instance template. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/recreateInstances
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation RecreateInstances(ReplicapoolService service, string project, string zone, string instanceGroupManager, InstanceGroupManagersRecreateInstancesRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.RecreateInstances(body, project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.RecreateInstances failed.", ex);
            }
        }

        /// <summary>
        /// Resizes the managed instance group up or down. If resized up, new instances are created using the current instance template. If resized down, instances are removed in the order outlined in Resizing a managed instance group. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/resize
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="size">Number of instances that should exist in this Instance Group Manager.</param>
        /// <returns>OperationResponse</returns>
        public static Operation Resize(ReplicapoolService service, string project, string zone, string instanceGroupManager, int? size)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);
                if (size == null)
                    throw new ArgumentNullException(size);

                // Make the request.
                return service.InstanceGroupManagers.Resize(project, zone, instanceGroupManager, size).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.Resize failed.", ex);
            }
        }

        /// <summary>
        /// Sets the instance template to use when creating new instances in this group. Existing instances are not affected. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/setInstanceTemplate
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation SetInstanceTemplate(ReplicapoolService service, string project, string zone, string instanceGroupManager, InstanceGroupManagersSetInstanceTemplateRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.SetInstanceTemplate(body, project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.SetInstanceTemplate failed.", ex);
            }
        }

        /// <summary>
        /// Modifies the target pools to which all new instances in this group are assigned. Existing instances in the group are not affected. 
        /// Documentation https://developers.google.com/replicapool/v1beta2/reference/instanceGroupManagers/setTargetPools
        /// Generation Note: This does not always build corectly.  Google needs to standardise things I need to figuer out which ones are wrong.
        /// </summary>
        /// <param name="service">Authenticated Replicapool service.</param>  
        /// <param name="project">The Google Developers Console project name.</param>
        /// <param name="zone">The name of the zone in which the instance group manager resides.</param>
        /// <param name="instanceGroupManager">The name of the instance group manager.</param>
        /// <param name="body">A valid Replicapool v1beta2 body.</param>
        /// <returns>OperationResponse</returns>
        public static Operation SetTargetPools(ReplicapoolService service, string project, string zone, string instanceGroupManager, InstanceGroupManagersSetTargetPoolsRequest body)
        {
            try
            {
                // Initial validation.
                if (service == null)
                    throw new ArgumentNullException("service");
                if (body == null)
                    throw new ArgumentNullException("body");
                if (project == null)
                    throw new ArgumentNullException(project);
                if (zone == null)
                    throw new ArgumentNullException(zone);
                if (instanceGroupManager == null)
                    throw new ArgumentNullException(instanceGroupManager);

                // Make the request.
                return service.InstanceGroupManagers.SetTargetPools(body, project, zone, instanceGroupManager).Execute();
            }
            catch (Exception ex)
            {
                throw new Exception("Request InstanceGroupManagers.SetTargetPools failed.", ex);
            }
        }
        
        }

        public static class SampleHelpers
        {

        /// <summary>
        /// Using reflection to apply optional parameters to the request.  
        /// 
        /// If the optonal parameters are null then we will just return the request as is.
        /// </summary>
        /// <param name="request">The request. </param>
        /// <param name="optional">The optional parameters. </param>
        /// <returns></returns>
        public static object ApplyOptionalParms(object request, object optional)
        {
            if (optional == null)
                return request;

            System.Reflection.PropertyInfo[] optionalProperties = (optional.GetType()).GetProperties();

            foreach (System.Reflection.PropertyInfo property in optionalProperties)
            {
                // Copy value from optional parms to the request.  They should have the same names and datatypes.
                System.Reflection.PropertyInfo piShared = (request.GetType()).GetProperty(property.Name);
				if (property.GetValue(optional, null) != null) // TODO Test that we do not add values for items that are null
					piShared.SetValue(request, property.GetValue(optional, null), null);
            }

            return request;
        }
    }
}